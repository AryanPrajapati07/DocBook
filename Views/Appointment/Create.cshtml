@model DocBook.Models.AppointmentViewModel
@{
    ViewData["Title"] = "Create Appointment";
}

<div class="container mx-auto p-8 max-w-2xl bg-white shadow-lg rounded-lg mt-8">
    <h2 class="text-3xl font-bold text-gray-800 mb-8 text-center">@ViewData["Title"]</h2>

    <form id="appointmentForm" asp-action="Create" method="post" class="space-y-6" novalidate>
        <!-- Patient Selection -->
        <div class="relative">
            <label for="PatientId" class="block text-sm font-medium text-gray-700 mb-1">Patient <span class="text-red-500">*</span></label>
            <select asp-for="PatientId" asp-items="ViewBag.Patients"
                    class="block w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                    aria-required="true" aria-describedby="patient-error">
                <option value="">Select a patient</option>
            </select>
            <span asp-validation-for="PatientId" class="text-red-500 text-sm mt-1 hidden" id="patient-error"></span>
        </div>

        <!-- Doctor Selection -->
        <div class="relative">
            <label for="DoctorId" class="block text-sm font-medium text-gray-700 mb-1">Doctor <span class="text-red-500">*</span></label>
            <select asp-for="DoctorId" asp-items="ViewBag.Doctors"
                    class="block w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                    aria-required="true" aria-describedby="doctor-error">
                <option value="">Select a doctor</option>
            </select>
            <span asp-validation-for="DoctorId" class="text-red-500 text-sm mt-1 hidden" id="doctor-error"></span>
        </div>

        <!-- Appointment Date & Time -->
        <div class="relative">
            <label for="AppointmentDate" class="block text-sm font-medium text-gray-700 mb-1">Appointment Date <span class="text-red-500">*</span></label>
            <input asp-for="AppointmentDate"
                   type="date"
                   min="@DateTime.Now.ToString("yyyy-MM-dd")"
                   class="block w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                   aria-required="true" aria-describedby="date-error" required />
            <span asp-validation-for="AppointmentDate" class="text-red-500 text-sm mt-1 hidden" id="date-error"></span>

            <div class="mt-4 relative">
                <label class="block text-sm font-medium text-gray-700 mb-2">Available Time Slots <span class="text-red-500">*</span></label>
                <input type="hidden" id="SelectedSlot" name="SelectedSlot" />
                <div id="slotGrid" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2" aria-describedby="slot-error"></div>
                <span class="text-red-500 text-sm mt-1 hidden" id="slot-error"></span>
                <div id="slot-loading" class="hidden absolute right-3 top-9">
                    <svg class="animate-spin h-5 w-5 text-blue-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>
                    </svg>
                </div>
            </div>
        </div>

        <!-- Reason -->
        <div class="relative">
            <label for="Reason" class="block text-sm font-medium text-gray-700 mb-1">Reason</label>
            <textarea asp-for="Reason"
                      class="block w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                      rows="4" placeholder="Enter the reason for the appointment" aria-describedby="reason-error"></textarea>
            <span asp-validation-for="Reason" class="text-red-500 text-sm mt-1 hidden" id="reason-error"></span>
        </div>

        <!-- Status -->
        <div class="relative">
            <label for="Status" class="block text-sm font-medium text-gray-700 mb-1">Status <span class="text-red-500">*</span></label>
            <select asp-for="Status"
                    class="block w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition duration-200"
                    aria-required="true" aria-describedby="status-error">
                <option value="">Select status</option>
                <option value="Scheduled">Scheduled</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
            </select>
            <span asp-validation-for="Status" class="text-red-500 text-sm mt-1 hidden" id="status-error"></span>
        </div>

        <!-- Form Actions -->
        <div class="flex justify-end space-x-4 mt-8">
            <button type="submit"
                    class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition duration-200 disabled:bg-blue-300 disabled:cursor-not-allowed"
                    id="submitButton">
                Save
            </button>
            <a asp-action="Index"
               class="bg-gray-500 text-white px-6 py-3 rounded-lg hover:bg-gray-600 transition duration-200"
               onclick="return confirm('Are you sure you want to cancel? Any unsaved changes will be lost.');">
                Cancel
            </a>
        </div>
    </form>
</div>

<!-- Include Tailwind CSS and jQuery -->
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>

<script>
    $(document).ready(function () {
        // Form validation
        $("#appointmentForm").validate({
            rules: {
                PatientId: {
                    required: true
                },
                DoctorId: {
                    required: true
                },
                AppointmentDate: {
                    required: true,
                    date: true
                },
                SlotTime: {
                    required: true
                },
                Status: {
                    required: true
                },
                Reason: {
                    maxlength: 500
                }
            },
            messages: {
                PatientId: {
                    required: "Please select a patient"
                },
                DoctorId: {
                    required: "Please select a doctor"
                },
                AppointmentDate: {
                    required: "Please select an appointment date and time",
                    date: "Please enter a valid date and time"
                },
                SlotTime: {
                    required: "Please select an appointment slot"
                },
                Status: {
                    required: "Please select a status"
                },
                Reason: {
                    maxlength: "Reason cannot exceed 500 characters"
                }
            },
            errorElement: "span",
            errorPlacement: function (error, element) {
                error.addClass("text-red-500 text-sm mt-1 block");
                error.appendTo(element.parent());
                element.attr("aria-invalid", "true");
                element.nextAll("[id$='-error']").removeClass("hidden");
            },
            success: function (label, element) {
                $(element).attr("aria-invalid", "false");
                $(element).nextAll("[id$='-error']").addClass("hidden");
            }
        });

        // Load available slots
        function loadSlots() {
            let doctorId = $("#DoctorId").val();
            let date = $("#AppointmentDate").val();

            if (doctorId && date) {
                $("#slot-loading").removeClass("hidden");
                $("#submitButton").prop("disabled", true);
                $("#slotGrid").empty();
                $("#SelectedSlot").val($(this).data("time"));


                $.getJSON(`/Appointment/GetAvailableSlots?doctorId=${doctorId}&date=${date}`, function (data) {
                    if (data.length === 0) {
                        $("#slotGrid").html('<p class="text-gray-500">No slots available</p>');
                        return;
                    }

                       data.forEach(slot => {
        let slotDateTime = new Date(date + " " + slot.slotTime); 
        let now = new Date();

        let isPast = slotDateTime < now;

        const button = $(`
            <button type="button"
                    class="slot-button p-3 border rounded-lg transition duration-200 text-sm"
                    data-time="${slot.slotTime}"
                    ${isPast ? "disabled" : ""}>
                ${slot.slotTime}
            </button>
        `);

        if (isPast) {
            button.addClass("bg-gray-300 text-gray-500 cursor-not-allowed border-gray-200");
        } else {
            button.addClass("bg-gray-100 text-gray-700 border-gray-300 hover:bg-blue-100");
        }

        $("#slotGrid").append(button);
    });


                    // Handle slot selection
                    $(".slot-button").click(function () {
                        $(".slot-button").removeClass("bg-blue-500 text-white border-blue-500").addClass("bg-gray-100 text-gray-700 border-gray-300");
                        $(this).removeClass("bg-gray-100 text-gray-700 border-gray-300").addClass("bg-blue-500 text-white border-blue-500");
                        $("#SlotTime").val($(this).data("time"));
                        $("#slot-error").addClass("hidden");
                        $("#appointmentForm").validate().element("#SlotTime");
                    });
                }).fail(function () {
                    $("#slot-error").text("Failed to load slots. Please try again.").removeClass("hidden");
                }).always(function () {
                    $("#slot-loading").addClass("hidden");
                    $("#submitButton").prop("disabled", false);
                });
            } else {
                $("#slotGrid").empty();
                $("#SlotTime").val("");
            }
        }

        // Event listeners
        $("#AppointmentDate").change(loadSlots);
        $("#DoctorId").change(loadSlots);
    });
</script>